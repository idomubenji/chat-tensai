name: Deploy to EC2

on:
  push:
    branches:
      - main  # or your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --max_old_space_size=4096
      NEXT_DISABLE_ESLINT: 1
      NEXT_DISABLE_TYPE_CHECKS: 1
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "${{ secrets.EC2_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      
      - name: Create env file
        run: |
          echo "NEXT_PUBLIC_PRODUCTION_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_PRODUCTION_SUPABASE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_PRODUCTION_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_PRODUCTION_SUPABASE_ANON_KEY }}" >> .env.production
          echo "PRODUCTION_SUPABASE_SERVICE_ROLE_KEY=${{ secrets.PRODUCTION_SUPABASE_SERVICE_ROLE_KEY }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_PRODUCTION_SUPABASE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_PRODUCTION_SUPABASE_ANON_KEY }}" >> .env.production
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.PRODUCTION_SUPABASE_SERVICE_ROLE_KEY }}" >> .env.production
          echo "NODE_OPTIONS=--max_old_space_size=4096" >> .env.production
          echo "NEXT_DISABLE_ESLINT=1" >> .env.production
          echo "NEXT_DISABLE_TYPE_CHECKS=1" >> .env.production
          
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ec2-user
        run: |
          # Copy deployment scripts
          scp -i ~/.ssh/deploy_key scripts/setup-ec2.sh scripts/deploy.sh $EC2_USER@$EC2_HOST:~
          
          # Copy environment file
          scp -i ~/.ssh/deploy_key .env.production $EC2_USER@$EC2_HOST:~
          
          # Run setup if not already done
          ssh -i ~/.ssh/deploy_key $EC2_USER@$EC2_HOST '
            if [ ! -d "/var/www/chat-genius" ]; then
              chmod +x ~/setup-ec2.sh
              ~/setup-ec2.sh
            fi
          '
          
          # Deploy application
          ssh -i ~/.ssh/deploy_key $EC2_USER@$EC2_HOST '
            cd /var/www/chat-genius
            
            # Pull latest changes
            if [ -d ".git" ]; then
              git pull
            else
              git clone ${{ secrets.REPO_URL }} .
            fi
            
            # Copy env file
            cp ~/.env.production .env.production
            
            # Run deployment
            chmod +x scripts/deploy.sh
            ./scripts/deploy.sh
          ' 